<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body {
            background-image: url('https://images.unsplash.com/photo-1504674900247-0877df9cc836?auto=format&fit=crop&w=1500&q=80');
            background-size: cover;
            background-attachment: fixed;
            background-repeat: no-repeat;
            min-height: 100vh;
            position: relative;
        }
        .food-overlay {
            position: fixed;
            top: 0; left: 0; width: 100vw; height: 100vh;
            pointer-events: none;
            z-index: 0;
        }
        .food-emoji {
            position: absolute;
            font-size: 2.5rem;
            opacity: 0.7;
            animation: float 8s linear infinite;
        }
        @keyframes float {
            0% { transform: translateY(100vh) scale(1) rotate(0deg); }
            100% { transform: translateY(-10vh) scale(1.2) rotate(360deg); }
        }
        .flip-card {
            background: transparent;
            width: 100%;
            height: 250px;
            perspective: 1000px;
            margin-bottom: 1.5rem;
            z-index: 1;
        }
        .flip-card-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.6s;
            transform-style: preserve-3d;
            z-index: 1;
        }
        .flip-card.flipped .flip-card-inner {
            transform: rotateY(180deg);
        }
        .flip-card-front, .flip-card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 1rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            background: linear-gradient(120deg, #f0abfc 0%, #a5b4fc 100%);
            color: #22223b;
            z-index: 1;
        }
        .flip-card-front {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            padding: 1.5rem;
        }
        .flip-card-back {
            transform: rotateY(180deg);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            padding: 1.5rem;
        }
        .card-title {
            color: #ff7043;
            text-shadow: 1px 1px 8px #fff8e1;
        }
        .btn-main {
            background: linear-gradient(90deg, #ffb347 0%, #ffcc33 100%);
            color: #fff;
            border: none;
            box-shadow: 0 2px 8px rgba(255, 140, 0, 0.15);
            transition: background 0.2s;
        }
        .btn-main:hover {
            background: linear-gradient(90deg, #ffcc33 0%, #ffb347 100%);
        }
        .btn-secondary {
            background: #ff7043;
            color: #fff;
            border: none;
        }
        .btn-secondary:hover {
            background: #ffab91;
            color: #fff;
        }
        .ingredients-list {
            font-size: 0.95rem;
        }
        .favorite-heart { 
            color: #e25555; 
            font-size: 1.5rem; 
        }
        .favorite-heart-outline { 
            color: #ff69b4; 
            font-size: 1.5rem; 
            text-shadow: 0 1px 4px #fff, 0 0 6px #ffb6c1; 
        }
        .favorite-button {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 2;
            background: rgba(255,255,255,0.7);
            border-radius: 50%;
            padding: 5px;
            border: none;
            cursor: pointer;
        }
        
        /* New direct icon styles without HTML entities */
        .icon-heart-filled {
            color: #e25555;
            font-size: 1.5rem;
        }
        
        .icon-heart-outline {
            color: #ff69b4;
            font-size: 1.5rem;
            text-shadow: 0 1px 4px #fff, 0 0 6px #ffb6c1;
        }
    </style>
    <script>
        function flipCard(idx) {
            document.getElementById('flip-card-' + idx).classList.add('flipped');
        }
        function unflipCard(idx) {
            document.getElementById('flip-card-' + idx).classList.remove('flipped');
        }

        // Food emoji rain effect
        document.addEventListener('DOMContentLoaded', function() {
            const foodEmojis = ['üçï','üçî','üç£','üçú','üç©','üç¶','üçâ','üçá','üçì','üç§','ü•ë','ü•ï','üçÖ','üçû','ü•®','üçü','üç™','üç∞','üçé','üçó','üç≥'];
            const overlay = document.createElement('div');
            overlay.className = 'food-overlay';
            for (let i = 0; i < 18; i++) {
                const emoji = document.createElement('div');
                emoji.className = 'food-emoji';
                emoji.style.left = Math.random() * 100 + 'vw';
                emoji.style.top = Math.random() * 100 + 'vh';
                emoji.style.animationDelay = (Math.random() * 8) + 's';
                emoji.textContent = foodEmojis[Math.floor(Math.random() * foodEmojis.length)];
                overlay.appendChild(emoji);
            }
            document.body.appendChild(overlay);
        });

        // New simpler toggle favorite function
        function toggleFavorite(element, recipeId, action) {
            // First immediately update the UI
            const iconElement = element.querySelector('i');
            
            if (action === 'favorite') {
                // Change to filled heart
                iconElement.className = 'bi bi-heart-fill icon-heart-filled';
                element.setAttribute('data-action', 'unfavorite');
            } else {
                // Change to outline heart
                iconElement.className = 'bi bi-heart icon-heart-outline';
                element.setAttribute('data-action', 'favorite');
            }
            
            // Get the form and update its action
            const form = element.closest('form');
            form.action = `/recipes/${recipeId}/${action}`;
            
            // Disable button to prevent multiple clicks
            element.disabled = true;
            
            // Submit after a short delay
            setTimeout(() => {
                form.submit();
            }, 300);
            
            return false;
        }
    </script>
</head>
<body>
    <%- include('partials/header') %>

    <div class="container mt-3">
        <h1 class="text-center mb-4"><%= title %></h1>
        <!-- Search and Filter Bar -->
        <form class="row mb-4" method="GET" action="/recipes">
            <div class="col-md-8 mb-2 mb-md-0">
                <input type="text" name="q" class="form-control" placeholder="Search recipes..." value="<%= typeof query !== 'undefined' ? query : '' %>">
            </div>
            <div class="col-md-2 mb-2 mb-md-0">
                <select name="cuisine" class="form-select" onchange="this.form.submit()">
                    <option value="">All Cuisines</option>
                    <% if (cuisines) { cuisines.forEach(cui => { %>
                        <option value="<%= cui %>" <%= cuisine === cui ? 'selected' : '' %>><%= cui %></option>
                    <% }) } %>
                </select>
            </div>
            <div class="col-md-1 d-grid">
                <button type="submit" class="btn btn-main">Search</button>
            </div>
        </form>
        <div class="row row-cols-2 row-cols-md-3 row-cols-lg-5 g-3">
            <% recipes.forEach((recipe) => { 
                 const favAction = recipe.isFavorited ? 'unfavorite' : 'favorite';
            %>
                <div class="col">
                    <div class="card h-100 shadow-sm position-relative">
                        <% if (locals.isAuthenticated) { %>
                            <form method="POST" action="/recipes/<%= recipe.id %>/<%= favAction %>" class="favorite-form">
                                <input type="hidden" name="page" value="<%= page %>">
                                <input type="hidden" name="q" value="<%= query %>">
                                <input type="hidden" name="cuisine" value="<%= cuisine %>">
                                <input type="hidden" name="category" value="<%= category %>">
                                <button type="button" class="favorite-button"
                                    onclick="return toggleFavorite(this, '<%= recipe.id %>', '<%= favAction %>')"
                                    data-action="<%= favAction %>"
                                    title="<%= recipe.isFavorited ? 'Remove from favorites' : 'Add to favorites' %>">
                                    <% if (recipe.isFavorited) { %>
                                        <i class="bi bi-heart-fill icon-heart-filled"></i>
                                    <% } else { %>
                                        <i class="bi bi-heart icon-heart-outline"></i>
                                    <% } %>
                                </button>
                            </form>
                        <% } %>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title"><%= recipe.title %></h5>
                            <p class="card-text"><%= recipe.description ? recipe.description.substring(0, 60) + '...' : 'No description provided.' %></p>
                            <% if (recipe.cuisine) { %>
                                <span class="badge bg-info text-dark mb-2"><%= recipe.cuisine %></span>
                            <% } %>
                            
                            <!-- Small rating display -->
                            <% if (recipe.average_rating && recipe.average_rating > 0) { %>
                                <div class="rating-small mb-2" style="font-size: 0.75rem;">
                                    <% 
                                        const avgRating = parseFloat(recipe.average_rating);
                                        const fullStars = Math.floor(avgRating);
                                        const hasHalfStar = avgRating % 1 >= 0.5;
                                        const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                    %>
                                    <% for (let i = 0; i < fullStars; i++) { %>
                                        <i class="bi bi-star-fill text-warning"></i>
                                    <% } %>
                                    <% if (hasHalfStar) { %>
                                        <i class="bi bi-star-half text-warning"></i>
                                    <% } %>
                                    <% for (let i = 0; i < emptyStars; i++) { %>
                                        <i class="bi bi-star text-muted"></i>
                                    <% } %>
                                    <span class="text-muted ms-1"><%= avgRating % 1 === 0 ? Math.round(avgRating) : avgRating.toFixed(1) %>/5</span>
                                </div>
                            <% } %>
                            
                            <div class="mt-auto text-end">
                                <a href="/recipes/<%= recipe.id %>?page=<%= page %>" class="btn btn-main btn-sm">View Recipe</a>
                            </div>
                        </div>
                        <div class="card-footer bg-white border-top-0 small text-muted text-end">
                            By <a href="/users/<%= recipe.user_id %>"><%= recipe.username || 'Unknown' %></a>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
        <!-- Pagination Controls -->
        <% if (totalPages > 1) { %>
        <nav aria-label="Recipe pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item <%= page === 1 ? 'disabled' : '' %>">
                    <a class="page-link" href="?<%=
                        'page=' + (page - 1) +
                        (query ? '&q=' + encodeURIComponent(query) : '') +
                        (category ? '&category=' + encodeURIComponent(category) : '') +
                        (cuisine ? '&cuisine=' + encodeURIComponent(cuisine) : '')
                    %>" tabindex="-1">Previous</a>
                </li>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= page === i ? 'active' : '' %>">
                        <a class="page-link" href="?<%=
                            'page=' + i +
                            (query ? '&q=' + encodeURIComponent(query) : '') +
                            (category ? '&category=' + encodeURIComponent(category) : '') +
                            (cuisine ? '&cuisine=' + encodeURIComponent(cuisine) : '')
                        %>"><%= i %></a>
                    </li>
                <% } %>
                <li class="page-item <%= page === totalPages ? 'disabled' : '' %>">
                    <a class="page-link" href="?<%=
                        'page=' + (page + 1) +
                        (query ? '&q=' + encodeURIComponent(query) : '') +
                        (category ? '&category=' + encodeURIComponent(category) : '') +
                        (cuisine ? '&cuisine=' + encodeURIComponent(cuisine) : '')
                    %>">Next</a>
                </li>
            </ul>
        </nav>
        <% } %>
    </div>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>